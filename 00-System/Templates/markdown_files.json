{
  "directory": "C:\\Users\\Ishan\\Documents\\Obsidian Vault\\00-System\\Templates",
  "scan_date": 1760533024.856819,
  "files": [
    {
      "filename": "activity-log.md",
      "relative_path": "activity-log.md",
      "absolute_path": ".\\activity-log.md",
      "size_bytes": 832,
      "modified_timestamp": 1760531323.9785998,
      "created_timestamp": 1760475834.633943,
      "content": "# Activity Log - <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>\n\n## üèÉ Activity Details\n\n**Activity**: <% tp.frontmatter.al_activity_type %>\n**Duration**: <% tp.frontmatter.al_duration %>\n**Quality**: <% tp.frontmatter.al_habit_quality %>\n\n## üìù Activity Description\n\n## üéØ Purpose & Intent\n\n**What was the goal of this activity?**\n\n**How does it align with my priorities?**\n\n## üß† Reflection\n\n**How effective was this activity?**\n\n**What did I learn?**\n\n**How could this be improved?**",
      "frontmatter": {
        "title": "Activity Log",
        "al_date": "<% tp.date.now(\"YYYY-MM-DD\") %>T<% tp.date.now(\"HH:mm\") %>",
        "al_habit_quality": "0.5",
        "al_days": "[[<% tp.date.now(\\\"YYYY-MM-DD\\\") %>]]",
        "al_activity_type": "",
        "al_activity_notes": "",
        "al_duration": "",
        "al_habit": "",
        "al_id": "",
        "entity_hierarchy_level": "atomic",
        "entity_type": "activity-log",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "annual-goal.md",
      "relative_path": "annual-goal.md",
      "absolute_path": ".\\annual-goal.md",
      "size_bytes": 2697,
      "modified_timestamp": 1760531758.115738,
      "created_timestamp": 1760476823.769373,
      "content": "# <% tp.file.title %>\n\n## üéØ Goal Overview\n\n**Goal Archetype**: \n**Status**: \n**Progress**: 0%\n\n### Strategic Intent\n\n### Strategic Approach\n\n### The Epic\n\n## üìä Success Framework\n\n**Target Value**: \n**Success Condition**: \n\n### Key Metrics\n\n## ‚ö†Ô∏è Risk Assessment\n\n**Key Risks**: \n\n## üîó Strategic Alignment\n\n**Vision Connection**: \n**Values Alignment**: \n\n## üìà Progress Tracking\n\n### Quarterly Breakdown\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Quarterly Goal\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"status\") },\n  { id: \"Progress\", value: row => row.value(\"goal_progress\") }\n];\n\nreturn function View() {\n  const goals = dc.useQuery(`@page and \"14-Quarterly-Goals\" and annual_goals = \"{{TITLE}}\"`); // Placeholder for tp.file.title\n  const sortedGoals = dc.useArray(goals, array => \n    array.sort(row => row.$name)\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedGoals} />;\n}\n```\n\n### Supporting Projects\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Project\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"project_status\") },\n  { id: \"Progress\", value: row => row.value(\"project_progress\") }\n];\n\nreturn function View() {\n  const projects = dc.useQuery(`@page and \"15-Projects\" and annual_goals = \"{{TITLE}}\"`); // Placeholder for tp.file.title\n  const sortedProjects = dc.useArray(projects, array =>\n    array.sort(row => row.value(\"project_progress\"))\n  );\n\n  return <dc.VanillaTable columns={COLUMNS} rows={sortedProjects} />;\n}\n```\n\n### Task Rollup\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Task\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"task_status\") },\n  { id: \"Priority\", value: row => row.value(\"task_priority\") }\n];\n\nreturn function View() {\n  const tasks = dc.useQuery(`@page and \"16-Tasks\" and annual_goals = \"{{TITLE}}\"`); // Placeholder for tp.file.title\n  const sortedTasks = dc.useArray(tasks, array =>\n    array.sort(row => row.value(\"task_priority\"))\n  );\n\n  return <dc.VanillaTable columns={COLUMNS} rows={sortedTasks} />;\n}\n```\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "",
        "goal_archetype": "",
        "strategic_intent": "",
        "strategic_approach": "",
        "the_epic": "",
        "target_value": "",
        "success_condition": "",
        "key_risks": "",
        "status": "Draft",
        "hierarchy_level": "strategic",
        "parent_entities": "[]",
        "child_entities": "[]",
        "sibling_entities": "[]",
        "related_time_periods": "[]",
        "strategic_alignment": "[]",
        "vision": "[]",
        "quarters": "[]",
        "quarterly_goals": "[]",
        "projects": "[]",
        "tasks": "[]",
        "primary_metric": "[]",
        "current_annual_goal": "",
        "goal_progress": 0,
        "planned_range": "",
        "entity_type": "annual-goal",
        "progress": 0,
        "health": "",
        "next_milestone": "",
        "blockers": "[]",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "community.md",
      "relative_path": "community.md",
      "absolute_path": ".\\community.md",
      "size_bytes": 2222,
      "modified_timestamp": 1760531735.9492085,
      "created_timestamp": 1760452698.029326,
      "content": "# Community Overview\n\n## Community Description\n\n## Community Vision\n\n## Community Mission\n\n## Community Values\n\n## Community Goals\n\n# Community Structure\n\n## Community Roles\n\n## Community Hierarchy\n\n## Community Channels\n\n## Community Events\n\n# Community Engagement\n\n## Engagement Metrics\n\n## Participation Rate\n\n## Retention Rate\n\n## Growth Rate\n\n# Community Resources\n\n## Resources\n\n## Tools\n\n## Platforms\n\n# Community Relationships\n\n## Stakeholders\n\n## Partners\n\n## Competitors\n\n# Community Challenges\n\n## Challenges\n\n## Risks\n\n## Mitigation Strategies\n\n# Community Analytics\n\n## Metrics\n\n## KPIs\n\n## Reporting Frequency\n\n# Community Management\n\n## Management Strategy\n\n## Communication Plan\n\n## Conflict Resolution\n\n# Community Development\n\n## Development Roadmap\n\n## Feature Requests\n\n## Improvement Areas\n\n# Community Feedback\n\n## Feedback Channels\n\n## Feedback Summary\n\n## Action Items\n\n# Community Documentation\n\n## Documentation Links\n\n## Knowledge Base\n\n## Onboarding Materials\n\n# Notes\n\n## Notes\n\n## Action Items\n\n## Next Steps\n\n# Related Items\n\n## Related Projects\n\n## Related Communities\n\n## Related Documents\n",
      "frontmatter": {
        "project_id": "",
        "community_name": "",
        "platform": "",
        "created_date": "2025-10-14",
        "last_updated": "2025-10-14",
        "status": "pending",
        "priority": "medium",
        "category": "Community",
        "tags": "[community, template, pending]",
        "community_type": "",
        "community_size": "",
        "community_focus": "",
        "community_values": "",
        "community_guidelines": "",
        "community_rules": "",
        "community_roles": "",
        "community_hierarchy": "",
        "community_channels": "",
        "community_events": "",
        "engagement_metrics": "",
        "participation_rate": "",
        "retention_rate": "",
        "growth_rate": "",
        "resources": "",
        "tools": "",
        "platforms": "",
        "stakeholders": "",
        "partners": "",
        "competitors": "",
        "short_term_goals": "",
        "long_term_goals": "",
        "success_metrics": "",
        "challenges": "",
        "risks": "",
        "mitigation_strategies": "",
        "metrics": "",
        "kpis": "",
        "reporting_frequency": "",
        "management_strategy": "",
        "communication_plan": "",
        "conflict_resolution": "",
        "development_roadmap": "",
        "feature_requests": "",
        "improvement_areas": "",
        "feedback_channels": "",
        "feedback_summary": "",
        "action_items": "",
        "documentation_links": "",
        "knowledge_base": "",
        "onboarding_materials": "",
        "notes": "",
        "next_steps": "",
        "related_projects": "",
        "related_communities": "",
        "related_documents": ""
      }
    },
    {
      "filename": "daily-note.md",
      "relative_path": "daily-note.md",
      "absolute_path": ".\\daily-note.md",
      "size_bytes": 5675,
      "modified_timestamp": 1760531809.9752712,
      "created_timestamp": 1760476043.0573492,
      "content": "# <% tp.date.now(\"dddd, MMMM D, YYYY\") %>\n\n## üåÖ Morning Context\n\n**Today's Strategic Focus**: \n**Energy Level**: \n**Key Intentions**: \n\n---\n\n## üß† Intelligence Synthesis\n\n### Day Synthesis\n\n### The Witness\n*Awareness and Observation Perspective*\n\n### The Logos Inquisitor\n*Rational Analysis and Logic*\n\n### The Alpha Scanner\n*Opportunities and Threats Assessment*\n\n### The Structural Integrator\n*Systems Thinking and Pattern Recognition*\n\n### The Ascension Architect\n*Growth and Development Focus*\n\n### The Mythopoetic Weaver\n*Narrative and Meaning Making*\n\n### The Somatic Arbiter\n*Body Wisdom and Physical Intelligence*\n\n### The State-Hacker\n*Consciousness and State Management*\n\n### The Capital Strategist\n*Financial and Resource Intelligence*\n\n### The Hearth Tender\n*Home, Family, and Care Dynamics*\n\n### The Network Weaver\n*Relationships and Social Intelligence*\n\n### The Stillness Warden\n*Peace, Calm, and Rest*\n\n### The Aesthetic Calibrator\n*Beauty, Design, and Harmony*\n\n### The Legacy Tender\n*Long-term Impact and Purpose*\n\n### The Systemic Navigator\n*Operational and Process Intelligence*\n\n---\n\n## üéØ Meta-Synthesis\n\n### Day Oracle Synthesis\n*Wisdom and Intuitive Perspective*\n\n### Day Phoenix Synthesis\n*Transformation and Renewal*\n\n### Day Sovereign Synthesis\n*Power, Agency, and Sovereignty*\n\n---\n\n## üìä Today's Data\n\n### Subjective Entries\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Entry\", value: row => row.$link },\n  { id: \"Emotion\", value: row => row.value(\"sj_primary_emotion\") },\n  { id: \"Secondary\", value: row => row.value(\"sj_secondary_emotion\") }\n];\n\nreturn function View() {\n  const entries = dc.useQuery(`@page and \"01-Subjective-Journal\" and sj_days = \"<% tp.file.title %>\"`);\n  const sortedEntries = dc.useArray(entries, array => \n    array.sort(row => -row.$mtime)\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedEntries} />;\n}\n```\n\n### Relational Entries\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Entry\", value: row => row.$link },\n  { id: \"People\", value: row => row.value(\"rj_people\")?.join(\", \") ?? \"\" },\n  { id: \"Tone\", value: row => row.value(\"rj_emotional_tone\") }\n];\n\nreturn function View() {\n  const entries = dc.useQuery(`@page and \"02-Relational-Journal\" and rj_days = \"<% tp.file.title %>\"`);\n  const sortedEntries = dc.useArray(entries, array => \n    array.sort(row => -row.$mtime)\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedEntries} />;\n}\n```\n\n### Systemic Issues\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Issue\", value: row => row.$link },\n  { id: \"Impact\", value: row => row.value(\"sysj_impact\") },\n  { id: \"Status\", value: row => row.value(\"sysj_status\") }\n];\n\nreturn function View() {\n  const issues = dc.useQuery(`@page and \"03-Systemic-Journal\" and sysj_date = \"<% tp.frontmatter.daily_date %>\"`);\n  const sortedIssues = dc.useArray(issues, array => \n    array.sort(row => -row.value(\"sysj_impact\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedIssues} />;\n}\n```\n\n### Activities\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Activity\", value: row => row.$link },\n  { id: \"Duration\", value: row => row.value(\"al_duration\") },\n  { id: \"Quality\", value: row => row.value(\"al_habit_quality\") }\n];\n\nreturn function View() {\n  const activities = dc.useQuery(`@page and \"04-Activity-Log\" and al_days = \"<% tp.file.title %>\"`);\n  const sortedActivities = dc.useArray(activities, array =>\n    array.sort(row => -row.$mtime)\n  );\n\n  return <dc.VanillaTable columns={COLUMNS} rows={sortedActivities} />;\n}\n```\n\n### Diet Log\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Meal\", value: row => row.$link },\n  { id: \"Type\", value: row => row.value(\"dl_meal_type\") }\n];\n\nreturn function View() {\n  const meals = dc.useQuery(`@page and \"05-Diet-Log\" and dl_days = \"<% tp.file.title %>\"`);\n  const sortedMeals = dc.useArray(meals, array =>\n    array.sort(row => -row.$mtime)\n  );\n\n  return <dc.VanillaTable columns={COLUMNS} rows={sortedMeals} />;\n}\n```\n\n---\n\n## üåô Evening Reflection\n\n### Night Wind-Down\n\n**Today's Wins**: \n**Today's Challenges**: \n**Tomorrow's Intentions**: \n**Gratitude**: \n\n---\n\n## üîó Quick Actions\n\n- [ ] Create Subjective log\n- [ ] Log Relational interaction\n- [ ] Record Systemic issue\n- [ ] Add Activity entry\n- [ ] Log Meal\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*",
      "frontmatter": {
        "title": "<% tp.date.now('YY-MM-DD') %>-D<% tp.date.now('DDD') %>",
        "daily_date": "<% tp.date.now(\"YYYY-MM-DD\") %>",
        "daily_day_name": "<% tp.date.now('dddd') %>",
        "daily_day_number": "<% tp.date.now(\"DDD\") %>",
        "daily_year": "<% tp.date.now(\"YYYY\") %>",
        "daily_time_period_start": "<% tp.date.now(\"YYYY-MM-DD\") %>",
        "daily_time_period_end": "<% tp.date.now(\"YYYY-MM-DD\") %>",
        "daily_containing_period": "[[<% tp.date.now('YYYY-[W]WW') %>]]",
        "entity_hierarchy_level": "review",
        "entity_type": "daily-review",
        "daily_weeks": "[\"[[<% tp.date.now('YYYY-[W]WW') %>]]\"]",
        "daily_months": "[\"[[<% tp.date.now('YYYY-MM') %>]]\"]",
        "daily_quarters": "[\"[[<% tp.date.now('YYYY-[Q]Q') %>]]\"]",
        "daily_years": "[\"[[<% tp.date.now('YYYY') %>]]\"]",
        "daily_day_synthesis": "",
        "daily_the_witness": "",
        "daily_the_logos_inquisitor": "",
        "daily_the_alpha_scanner": "",
        "daily_the_structural_integrator": "",
        "daily_the_ascension_architect": "",
        "daily_the_mythopoetic_weaver": "",
        "daily_the_somatic_arbiter": "",
        "daily_the_state_hacker": "",
        "daily_the_capital_strategist": "",
        "daily_the_hearth_tender": "",
        "daily_the_network_weaver": "",
        "daily_the_stillness_warden": "",
        "daily_the_aesthetic_calibrator": "",
        "daily_the_legacy_tender": "",
        "daily_the_systemic_navigator": "",
        "daily_day_oracle_synthesis": "",
        "daily_day_phoenix_synthesis": "",
        "daily_day_sovereign_synthesis": "",
        "daily_night_wind_down": "",
        "daily_status": "",
        "daily_day_report": "",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "diet-log.md",
      "relative_path": "diet-log.md",
      "absolute_path": ".\\diet-log.md",
      "size_bytes": 762,
      "modified_timestamp": 1760531052.1558466,
      "created_timestamp": 1760475943.2912247,
      "content": "# Diet Log - <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>\n\n## üçΩÔ∏è Meal Details\n\n**Meal Type**: <% tp.frontmatter.dl_meal_type %>\n**Food/Drink**: \n\n## üìù Description\n\n## üß† Nutritional Reflection\n\n**How did this meal affect my energy?**\n\n**How did I feel after eating?**\n\n**Any patterns to notice?**\n\n## üéØ Health Goals Alignment\n\n**How does this support my health objectives?**\n\n**Any adjustments needed?**\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "Diet Log",
        "dl_date": "<% tp.date.now(\"YYYY-MM-DD\") %>T<% tp.date.now(\"HH:mm\") %>",
        "dl_meal_type": "",
        "dl_days": "[[<% tp.date.now(\\\"YYYY-MM-DD\\\") %>]]",
        "dl_total_context": "",
        "dl_id": "",
        "entity_hierarchy_level": "atomic",
        "entity_type": "diet-log",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "documents.md",
      "relative_path": "documents.md",
      "absolute_path": ".\\documents.md",
      "size_bytes": 3219,
      "modified_timestamp": 1760530520.8582506,
      "created_timestamp": 1760486838.609068,
      "content": "# Document Overview\n\n## Document Title\n\n## Document Type\n\n## Document Category\n\n## Document Source\n\n## Document Author\n\n# Document Content\n\n## Abstract\n\n## Executive Summary\n\n## Key Findings\n\n## Detailed Content\n\n## Methodology\n\n## Data Sources\n\n## Analysis\n\n## Conclusions\n\n# Document Organization\n\n## File Location\n\n## Folder Structure\n\n## Related Documents\n\n## Linked Resources\n\n## Document Hierarchy\n\n## Version Control\n\n## Document Series\n\n## Collection Membership\n\n# Document Processing\n\n## Processing",
      "frontmatter": {
        "title": "",
        "doc_category": "",
        "doc_status": "Not started",
        "document_id": "",
        "document_title": "",
        "document_type": "",
        "created_date": "2025-10-14",
        "last_updated": "2025-10-14",
        "category": "Documents",
        "entity_type": "document",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>",
        "tags": "[\"documents\", \"template\", \"pending\"]",
        "document_category": "",
        "document_subtype": "",
        "document_source": "",
        "document_author": "",
        "document_format": "",
        "document_length": "",
        "document_complexity": "",
        "document_importance": "",
        "abstract": "",
        "executive_summary": "",
        "key_findings": "",
        "detailed_content": "",
        "methodology": "",
        "data_sources": "",
        "analysis": "",
        "conclusions": "",
        "file_location": "",
        "folder_structure": "",
        "related_documents": "",
        "linked_resources": "",
        "document_hierarchy": "",
        "version_control": "",
        "document_series": "",
        "collection_membership": "",
        "processing_status": "",
        "review_required": "",
        "approval_needed": "",
        "publishing_status": "",
        "workflow_stage": "",
        "deadlines": "",
        "responsible_party": "",
        "quality_checks": "",
        "completeness": "",
        "accuracy": "",
        "consistency": "",
        "readability": "",
        "formatting_quality": "",
        "citation_quality": "",
        "grammar_quality": "",
        "overall_rating": "",
        "parent_documents": "",
        "child_documents": "",
        "related_versions": "",
        "cross_references": "",
        "dependencies": "",
        "prerequisites": "",
        "complementary_docs": "",
        "conflicting_docs": "",
        "access_count": "",
        "download_count": "",
        "usage_frequency": "",
        "user_ratings": "",
        "search_ranking": "",
        "citation_count": "",
        "reference_frequency": "",
        "impact_score": "",
        "archival_status": "",
        "retention_schedule": "",
        "deletion_date": "",
        "backup_status": "",
        "storage_location": "",
        "access_permissions": "",
        "sharing_restrictions": "",
        "security_level": "",
        "collaborators": "",
        "reviewers": "",
        "contributors": "",
        "feedback_providers": "",
        "sharing_settings": "",
        "comment_threads": "",
        "suggestion_history": "",
        "approval_chain": "",
        "draft_status": "",
        "revision_history": "",
        "edit_timeline": "",
        "future_updates": "",
        "expansion_plans": "",
        "improvement_areas": "",
        "research_needs": "",
        "validation_required": "",
        "review_dates": "",
        "review_committee": "",
        "review_comments": "",
        "revision_requests": "",
        "approval_status": "",
        "rejection_reasons": "",
        "modifications_needed": "",
        "final_signoff": "",
        "publication_status": "",
        "publishing_platform": "",
        "distribution_list": "",
        "public_access": "",
        "publication_date": "",
        "issn_isbn": "",
        "doi_identifier": "",
        "copyright_info": "",
        "legal_review": "",
        "compliance_check": "",
        "regulatory_approval": "",
        "data_protection": "",
        "intellectual_property": "",
        "license_agreement": "",
        "attribution_requirements": "",
        "usage_restrictions": "",
        "metadata_complete": "",
        "indexing_status": "",
        "cataloging_info": "",
        "discovery_metadata": "",
        "search_optimization": "",
        "tag_completeness": "",
        "category_accuracy": "",
        "crosslink_status": "",
        "internal_notes": "",
        "action_items": "",
        "next_steps": "",
        "pending_tasks": "",
        "related_projects": "",
        "related_research": "",
        "related_policies": "",
        "related_standards": ""
      }
    },
    {
      "filename": "failure-scenario.md",
      "relative_path": "failure-scenario.md",
      "absolute_path": ".\\failure-scenario.md",
      "size_bytes": 938,
      "modified_timestamp": 1760531986.6826193,
      "created_timestamp": 1760394146.0678754,
      "content": "# <% tp.file.title %>\n\n## ‚ö†Ô∏è Risk Overview\n\n**Type**: \n**Impact Level**: \n**Likelihood**: \n**Threat Level**: \n**Status**: \n\n## üéØ The Anti-Goal\n\n*What you're actively avoiding*\n\n## üîç Early Warning Signs\n\n## üõ°Ô∏è Prevention Protocol\n\n### Proactive Protocol\n\n### Reactive Protocol\n\n## üìä Risk Assessment\n\n**Last Assessed**: \n\n**Current Quarter**: \n\n## üîó Related Items\n\n**Quarterly Goals**: \n**Systemic Issues**: \n\n## üìù Post-Mortem Debrief\n\n*(To be filled if the scenario materializes)*\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "",
        "the_antigoal": "",
        "type": "",
        "impact": "",
        "likelihood": "",
        "status": "Identified",
        "early_warning_signs": "",
        "proactive_protocol": "",
        "reactive_protocol": "",
        "post_mortem_debrief": "",
        "last_assessed": "",
        "quarterly_goals": "[]",
        "systemic_journal": "[]",
        "threat_level": "",
        "current_quarter": "",
        "suggestions": "",
        "entity_type": "failure-scenario",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "financial-account.md",
      "relative_path": "financial-account.md",
      "absolute_path": ".\\financial-account.md",
      "size_bytes": 1122,
      "modified_timestamp": 1760530520.8105452,
      "created_timestamp": 1760476260.7763019,
      "content": "# <% tp.file.title %>\n\n## üè¶ Account Overview\n\n**Account Type**: <% tp.frontmatter.fa_type %>\n**Sub-Type**: <% tp.frontmatter.fa_subtype %>\n**Status**: <% tp.frontmatter.fa_status %>\n**Capital Engine**: <% tp.frontmatter.fa_capital_engine %>\n\n## üí∞ Balance Information\n\n**Current Balance**: <% tp.frontmatter.fa_current_balance %>\n**Last Updated**: <% tp.frontmatter.fa_last_updated %>\n**Active Range**: <% tp.frontmatter.fa_active_range %>\n\n## üìä Account Status\n\n## üìÑ External References\n\n**Related Statements**: <% tp.frontmatter.fa_related_statements %>\n**Related Transactions**: <% tp.frontmatter.fa_related_transactions %>\n\n## üß† Financial Strategy\n\n**Role in Financial System**:\n**Optimization Opportunities**: \n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "",
        "fa_type": "[\"Asset\"]",
        "fa_subtype": "",
        "fa_status": "Active",
        "fa_capital_engine": "",
        "fa_current_balance": 0,
        "fa_financial_logs": "[]",
        "fa_last_updated": "",
        "fa_related_statements": "",
        "fa_related_transactions": "",
        "fa_current_status": "",
        "fa_active_range": "",
        "entity_type": "financial-account",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "financial-log.md",
      "relative_path": "financial-log.md",
      "absolute_path": ".\\financial-log.md",
      "size_bytes": 870,
      "modified_timestamp": 1760532000.0244682,
      "created_timestamp": 1760394250.4556272,
      "content": "# Financial Log - <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>\n\n## üí∞ Transaction Details\n\n**Description**: \n**Amount**: \n**Category**: \n**Capital Engine**: \n**Transaction Type**: \n\n## üè¶ Financial Accounts\n\n## üìù Notes\n\n## üß† Financial Reflection\n\n**How does this align with my financial strategy?**\n\n**What patterns do I notice?**\n\n**Any adjustments needed?**\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "",
        "fl_date": "<% tp.date.now('YYYY-MM-DD') %>T<% tp.date.now('HH:mm') %>",
        "fl_category": "",
        "fl_capital_engine": "",
        "fl_financial_accounts": "[]",
        "fl_weeks": "[\"[[<% tp.date.now('YYYY-[W]WW') %>]]\"]",
        "fl_months": "[\"[[<% tp.date.now('YYYY-MM') %>]]\"]",
        "fl_receipt_document": "",
        "fl_amount": 0,
        "fl_transaction_type": "",
        "fl_is_financial": true,
        "fl_financial_relater": "",
        "fl_notes": "",
        "entity_type": "financial-log",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "monthly-review.md",
      "relative_path": "monthly-review.md",
      "absolute_path": ".\\monthly-review.md",
      "size_bytes": 4856,
      "modified_timestamp": 1760532013.6771333,
      "created_timestamp": 1760399742.021903,
      "content": "# <% tp.date.now(\"MMMM YYYY\") %> Review\n\n**Date Range**: <% tp.date.now(\"YYYY-MM-DD\", 1) %> - <% tp.date.now(\"YYYY-MM-DD\", 0, 1) %>\n\n---\n\n## üß† Intelligence Synthesis\n\n### Month Synthesis\n\n### The Witness\n*Monthly Awareness and Observation*\n\n### The Logos Inquisitor\n*Monthly Rational Analysis*\n\n### The Alpha Scanner\n*Monthly Opportunities and Threats*\n\n### The Structural Integrator\n*Monthly Systems Thinking*\n\n### The Ascension Architect\n*Monthly Growth and Development*\n\n### The Mythopoetic Weaver\n*Monthly Narrative and Meaning*\n\n### The Somatic Arbiter\n*Monthly Body Wisdom*\n\n### The State-Hacker\n*Monthly Consciousness States*\n\n### The Capital Strategist\n*Monthly Financial Intelligence*\n\n### The Hearth Tender\n*Monthly Home and Family Dynamics*\n\n### The Network Weaver\n*Monthly Relationship Intelligence*\n\n### The Stillness Warden\n*Monthly Peace and Rest*\n\n### The Aesthetic Calibrator\n*Monthly Beauty and Design*\n\n### The Legacy Tender\n*Monthly Long-term Impact*\n\n### The Systemic Navigator\n*Monthly Operational Intelligence*\n\n---\n\n## üéØ Meta-Synthesis\n\n### Month Oracle Synthesis\n*Monthly Wisdom Perspective*\n\n### Month Phoenix Synthesis\n*Monthly Transformation Perspective*\n\n### Month Sovereign Synthesis\n*Monthly Power and Agency*\n\n---\n\n## üìä Monthly Metrics\n\n### Weekly Summaries\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Week\", value: row => row.$link },\n  { id: \"Synthesized\", value: row => row.value(\"day_synthesis\") ? \"‚úÖ\" : \"‚è≥\" }\n];\n\nreturn function View() {\n  const weeks = dc.useQuery(`@page and \"07-Weeks\" and months = \"<% tp.file.title %>\"`);\n  const sortedWeeks = dc.useArray(weeks, array => \n    array.sort(row => row.$name)\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedWeeks} />;\n}\n```\n\n### Task Completion\n```datacorejsx\nreturn function View() {\n  const tasks = dc.useQuery(`@page and \"16-Tasks\" and months = \"<% tp.file.title %>\"`);\n  \n  const total = tasks.length;\n  const completed = tasks.filter(task => task.value(\"completed\")).length;\n  const percentage = total > 0 ? Math.round((completed / total) * 100) : 0;\n  \n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Total</th>\n          <th>Completed</th>\n          <th>%</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{total}</td>\n          <td>{completed}</td>\n          <td>{percentage}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n```\n\n### Financial Summary\n```datacorejsx\nreturn function View() {\n  const financialLogs = dc.useQuery(`@page and \"Financial Log\" and months = \"<% tp.file.title %>\"`);\n  \n  const income = financialLogs.reduce((sum, log) => sum + (log.value(\"Total_Income\") || 0), 0);\n  const expenses = financialLogs.reduce((sum, log) => sum + (log.value(\"Total_Expenses\") || 0), 0);\n  const net = financialLogs.reduce((sum, log) => sum + (log.value(\"Net_Cashflow\") || 0), 0);\n  \n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Income</th>\n          <th>Expenses</th>\n          <th>Net</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{income}</td>\n          <td>{expenses}</td>\n          <td>{net}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n```\n\n### Systemic Issues\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Issue\", value: row => row.$link },\n  { id: \"Impact\", value: row => row.value(\"impact\") },\n  { id: \"Status\", value: row => row.value(\"status\") }\n];\n\nreturn function View() {\n  const issues = dc.useQuery(`@page and \"03-Systemic-Journal\" and date >= \"<% tp.frontmatter.time_period_start %>\" and date <= \"<% tp.frontmatter.time_period_end %>\"`);\n  const sortedIssues = dc.useArray(issues, array => \n    array.sort(row => row.value(\"impact\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedIssues} />;\n}\n```\n\n---\n\n## üé≠ Monthly Reflection\n\n### Key Learnings\n\n**What did I learn this month?**\n\n### Wins\n\n**What went well?**\n\n### Challenges\n\n**What were the obstacles?**\n\n### Pattern Recognition\n\n**What patterns do I notice?**\n\n### Next Month Focus\n\n**What needs attention next month?**\n\n---\n\n## üöÄ Next Month Planning\n\n**Primary Focus Areas**\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "<% tp.date.now('YYYY-MM') %>",
        "month_number": "<% tp.date.now(\"MM\") %>",
        "year": "<% tp.date.now(\"YYYY\") %>",
        "time_period_start": "<% tp.date.now('YYYY-MM-01') %>",
        "time_period_end": "<% tp.date.now('YYYY-MM-DD', 0, tp.date.now('YYYY-MM-01'), 1, 'month') %>",
        "containing_period": "[[<% tp.date.now('YYYY-[Q]Q') %>]]",
        "contained_periods": "[]",
        "parallel_periods": "[]",
        "hierarchy_level": "review",
        "parent_entities": "[]",
        "child_entities": "[]",
        "sibling_entities": "[]",
        "related_time_periods": "[]",
        "strategic_alignment": "[]",
        "quarters": "[\"[[<% tp.date.now('YYYY-[Q]Q') %>]]\"]",
        "years": "[\"[[<% tp.date.now('YYYY') %>]]\"]",
        "weeks": "[]",
        "days": "[]",
        "entity_type": "monthly-review",
        "status": "Active",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "notes.md",
      "relative_path": "notes.md",
      "absolute_path": ".\\notes.md",
      "size_bytes": 2595,
      "modified_timestamp": 1760532029.9157095,
      "created_timestamp": 1760487101.8679552,
      "content": "# Note Overview\n\n## Note Title\n\n## Note Type\n\n## Note Category\n\n## Note Source\n\n## Note Author\n\n# Note Content\n\n## Summary\n\n## Key Points\n\n## Detailed Notes\n\n## Examples\n\n## References\n\n## Resources\n\n# Note Organization\n\n## Folder Location\n\n## Related Notes\n\n## Linked Topics\n\n## Tag Hierarchy\n\n# Note Processing\n\n## Processing Status\n\n## Review Required\n\n## Action Items\n\n## Follow Up Needed\n\n# Note Quality\n\n## Completeness\n\n## Accuracy\n\n## Clarity\n\n## Relevance\n\n# Note Relationships\n\n## Parent Notes\n\n## Child Notes\n\n## Sibling Notes\n\n## Cross References\n\n# Note Analytics\n\n## Access Frequency\n\n## Usage Count\n\n## Last Accessed\n\n## Search Relevance\n\n# Note Management\n\n## Archival Status\n\n## Deletion Date\n\n## Backup Status\n\n## Version History\n\n# Note Collaboration\n\n## Shared With\n\n## Permissions\n\n## Contributions\n\n## Feedback\n\n# Note Development\n\n## Development Status\n\n## Expansion Areas\n\n## Improvement Needed\n\n## Future Plans\n\n# Note Review\n\n## Review Date\n\n## Reviewer\n\n## Review Comments\n\n## Review Score\n\n# Note Documentation\n\n## Documentation Links\n\n## Related Documents\n\n## External Resources\n\n## Internal References\n\n# Notes\n\n## Personal Notes\n\n## Action Items\n\n## Next Steps\n\n# Related Items\n\n## Related Projects\n\n## Related Tasks\n\n## Related Concepts",
      "frontmatter": {
        "title": "",
        "note_status": "New Note",
        "note_id": "",
        "note_title": "",
        "note_type": "",
        "created_date": "2025-10-14",
        "last_updated": "2025-10-14",
        "category": "Notes",
        "entity_type": "note",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>",
        "tags": "[notes, template, pending]",
        "note_category": "",
        "note_subcategory": "",
        "note_source": "",
        "note_author": "",
        "note_format": "",
        "note_length": "",
        "note_complexity": "",
        "note_importance": "",
        "summary": "",
        "key_points": "",
        "detailed_notes": "",
        "examples": "",
        "references": "",
        "resources": "",
        "folder_location": "",
        "related_notes": "[]",
        "linked_topics": "[]",
        "tag_hierarchy": "",
        "processing_status": "",
        "review_required": false,
        "action_items": "[]",
        "follow_up_needed": false,
        "completeness": "",
        "accuracy": "",
        "clarity": "",
        "relevance": "",
        "parent_notes": "[]",
        "child_notes": "[]",
        "sibling_notes": "[]",
        "cross_references": "[]",
        "access_frequency": 0,
        "usage_count": 0,
        "last_accessed": "",
        "search_relevance": "",
        "archival_status": "",
        "deletion_date": "",
        "backup_status": "",
        "version_history": "",
        "shared_with": "[]",
        "permissions": "",
        "contributions": "[]",
        "feedback": "[]",
        "development_status": "",
        "expansion_areas": "[]",
        "improvement_needed": "[]",
        "future_plans": "",
        "review_date": "",
        "reviewer": "",
        "review_comments": "",
        "review_score": "",
        "documentation_links": "[]",
        "related_documents": "[]",
        "external_resources": "[]",
        "internal_references": "[]",
        "personal_notes": "",
        "next_steps": "[]",
        "related_projects": "[]",
        "related_tasks": "[]",
        "related_concepts": "[]"
      }
    },
    {
      "filename": "people-template.md",
      "relative_path": "people-template.md",
      "absolute_path": ".\\people-template.md",
      "size_bytes": 3128,
      "modified_timestamp": 1760530520.7653933,
      "created_timestamp": 1760394000.5839548,
      "content": "# <% tp.file.title %>\n\n## üë§ Basic Info\n\n**Relationship Status**: \n**City**: \n**Custom Name**: \n\n## üß† Intelligence Profile\n\n### Developmental Psychology\n**Developmental Altitude**: \n**Primary Center of Intelligence**: \n**Explanatory Style**: \n**Stability Profile**: \n**Primary Conflict Style**: \n**Core Shadow**: \n\n### Motivational & Strategic\n**Aspirational Drive**: \n**Dominant Power Strategy**: \n**Temporal Focus**: \n**Influence Toolkit**: \n\n## ü§ù Network Management\n\n**Current Profile**: \n**Desired Trajectory**: \n**Value Exchange Balance**: \n**Connection Frequency**: 30 days\n\n**Next Reconnect**: \n**Last Connected**: \n\n## üìã Strategic Context\n\n### Origin\n\n**How we met**: \n\n### Professional Domain\n\n**Expertise & Influence**: \n\n### Strategic Value\n\n**Strategic Context**: \n\n### Engagement Blueprint\n\n**How to interact effectively**: \n\n### Key Intelligence\n\n**Important facts to remember**: \n\n## üìä Relationship History\n\n### Recent Interactions\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Interaction\", value: row => row.$link },\n  { id: \"Date\", value: row => row.value(\"date\") },\n  { id: \"Tone\", value: row => row.value(\"emotional_tone\") }\n];\n\nreturn function View() {\n  const interactions = dc.useQuery(`@page and \"Logs/Relational\" and people = \"<% tp.file.title %>\"`);\n  const sortedInteractions = dc.useArray(interactions, array => \n    array.sort(row => row.value(\"date\"))\n  ).slice(0, 5);\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedInteractions} />;\n}\n```\n\n### Shared Projects\n\n```datacorejsx\nreturn function View() {\n  const projects = dc.useQuery(`@page and \"Projects\" and people = \"<% tp.file.title %>\" and status = \"Active\"`);\n  \n  return (\n    <ul>\n      {projects.map(project => (\n        <li key={project.$path}>{project.$link}</li>\n      ))}\n    </ul>\n  );\n}\n```\n\n## üéØ Growth Opportunities\n\n**What I can learn from them**: \n**How I can contribute to their growth**: \n**Potential collaborations**: \n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "",
        "people_first_name": "",
        "people_custom_name": "",
        "people_city": "",
        "people_relationship_status": "",
        "people_developmental_altitude": "",
        "people_primary_center_intelligence": "",
        "people_explanatory_style": "",
        "people_stability_profile": "",
        "people_primary_conflict_style": "",
        "people_dominant_power_strategy": "",
        "people_aspirational_drive": "",
        "people_core_shadow": "",
        "people_temporal_focus": "",
        "people_influence_toolkit": "[]",
        "people_networking_profile": "",
        "people_desired_trajectory": "",
        "people_value_exchange_balance": "",
        "people_in_days_connection_frequency": 30,
        "people_reconnect_by": "",
        "people_last_connected_date": "",
        "people_origin_context": "",
        "people_key_personal_intel": "",
        "people_strategic_context": "",
        "people_professional_domain_influence": "",
        "people_engagement_blueprint": "",
        "people_summary": "",
        "people_community": "[]",
        "people_projects": "[]",
        "people_stories": "[]",
        "people_current_status": "",
        "people_active_range": "",
        "entity_type": "person",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "project-template.md",
      "relative_path": "project-template.md",
      "absolute_path": ".\\project-template.md",
      "size_bytes": 2366,
      "modified_timestamp": 1760530520.7443721,
      "created_timestamp": 1760471651.4770458,
      "content": "# <% tp.file.title %>\n\n## üìã Project Overview\n\n**Priority**: <% tp.frontmatter.project_priority %>\n**Status**: <% tp.frontmatter.project_status %>\n**Progress**: 0%\n\n### Project Summary\n\n## üéØ Strategic Alignment\n\n**Quarterly Goals**: \n**Annual Goals**: \n**Vision Connection**: \n\n## üìä Success Metrics\n\n### KPIs\n\n### Hard Constraints (Anti-Goals)\n\n## üöÄ Execution Plan\n\n### Phase 1\n- [ ] \n- [ ] \n- [ ] \n\n### Phase 2\n- [ ] \n- [ ] \n- [ ] \n\n### Phase 3\n- [ ] \n- [ ] \n- [ ] \n\n## üìã Active Tasks\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Task\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"task_status\") },\n  { id: \"Priority\", value: row => row.value(\"task_priority\") }\n];\n\nreturn function View() {\n  const tasks = dc.useQuery(`@page and \"16-Tasks\" and projects = \"<% tp.file.title %>\" and task_status != \"Done\"`);\n  const sortedTasks = dc.useArray(tasks, array =>\n    array.sort(row => row.value(\"task_priority\"))\n  );\n\n  return <dc.VanillaTable columns={COLUMNS} rows={sortedTasks} />;\n}\n```\n\n## üìà Progress Tracking\n\n**Current Progress**: 0%\n**Next Milestone**: \n\n## ü§ù Resources\n\n**People Involved**: \n**Key Documents**: \n**Required Competencies**: \n\n## ‚ö†Ô∏è Systemic Issues\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Issue\", value: row => row.$link },\n  { id: \"Impact\", value: row => row.value(\"impact\") },\n  { id: \"Status\", value: row => row.value(\"status\") }\n];\n\nreturn function View() {\n  const issues = dc.useQuery(`@page and \"03-Systemic-Journal\" and projects = \"<% tp.file.title %>\"`);\n  const sortedIssues = dc.useArray(issues, array => \n    array.sort(row => row.value(\"impact\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedIssues} />;\n}\n```\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "",
        "project_summary": "",
        "project_priority": "‚≠ê‚≠ê‚≠ê",
        "project_status": "On-Hold",
        "project_start": "",
        "project_deadline": "",
        "project_review_date": "",
        "entity_hierarchy_level": "strategic",
        "entity_type": "project",
        "project_quarterly_goals": "[]",
        "project_annual_goals": "[]",
        "project_quarters": "[]",
        "project_years": "[]",
        "project_tasks": "[]",
        "project_people": "[]",
        "project_notes": "[]",
        "project_documents": "[]",
        "project_competencies": "[]",
        "project_systemic_journal": "[]",
        "project_hard_constraints_antigoals": "",
        "project_kpis": "",
        "project_kpi_bar": 0,
        "project_progress": 0,
        "project_health": "",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "quarterly-goal.md",
      "relative_path": "quarterly-goal.md",
      "absolute_path": ".\\quarterly-goal.md",
      "size_bytes": 2548,
      "modified_timestamp": 1760532045.9799414,
      "created_timestamp": 1760477144.3140223,
      "content": "# <% tp.file.title %>\n\n## üéØ OKR Framework\n\n**Status**: \n**Progress**: 0%\n**Health**: \n\n### Objective\n\n## üìä Key Results\n\n### KR1\n\n### KR2\n\n### KR3\n\n## üß† Key Learning\n\n## üîó Strategic Alignment\n\n**Annual Goal**: \n**Vision Connection**: \n\n## üìà Supporting Projects\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Project\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"project_status\") },\n  { id: \"Progress\", value: row => row.value(\"project_progress\") }\n];\n\nreturn function View() {\n  const projects = dc.useQuery(`@page and \"15-Projects\" and quarterly_goals = \"{{TITLE}}\"`); // Placeholder for tp.file.title\n  const sortedProjects = dc.useArray(projects, array =>\n    array.sort(row => row.value(\"project_progress\"))\n  );\n\n  return <dc.VanillaTable columns={COLUMNS} rows={sortedProjects} />;\n}\n```\n\n### Task Rollup\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Task\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"task_status\") },\n  { id: \"Priority\", value: row => row.value(\"task_priority\") }\n];\n\nreturn function View() {\n  const tasks = dc.useQuery(`@page and \"16-Tasks\" and quarterly_goals = \"{{TITLE}}\"`); // Placeholder for tp.file.title\n  const sortedTasks = dc.useArray(tasks, array =>\n    array.sort(row => row.value(\"task_priority\"))\n  );\n\n  return <dc.VanillaTable columns={COLUMNS} rows={sortedTasks} />;\n}\n```\n\n## ‚ö†Ô∏è Risk Management\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Risk\", value: row => row.$link },\n  { id: \"Impact\", value: row => row.value(\"impact\") },\n  { id: \"Likelihood\", value: row => row.value(\"likelihood\") },\n  { id: \"Status\", value: row => row.value(\"status\") }\n];\n\nreturn function View() {\n  const risks = dc.useQuery(`@page and \"24-Failure-Scenarios\" and quarterly_goals = \"{{TITLE}}\"`); // Placeholder for tp.file.title\n  const sortedRisks = dc.useArray(risks, array => \n    array.sort(row => row.value(\"impact\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedRisks} />;\n}\n```\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "",
        "key_result_1": "",
        "key_result_2": "",
        "key_result_3": "",
        "key_learning": "",
        "status": "Planning",
        "hierarchy_level": "strategic",
        "parent_entities": "[]",
        "child_entities": "[]",
        "sibling_entities": "[]",
        "related_time_periods": "[]",
        "strategic_alignment": "[]",
        "annual_goals": "[]",
        "quarters": "[]",
        "years": "[]",
        "projects": "[]",
        "tasks": "[]",
        "failure_scenarios": "[]",
        "current_quarter_goal": "",
        "goal_progress": 0,
        "health": "",
        "progress": 0,
        "next_milestone": "",
        "blockers": "[]",
        "entity_type": "quarterly-goal",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "quarterly-review.md",
      "relative_path": "quarterly-review.md",
      "absolute_path": ".\\quarterly-review.md",
      "size_bytes": 5611,
      "modified_timestamp": 1760531052.1417184,
      "created_timestamp": 1760399782.7694561,
      "content": "# <% tp.date.now(\"YYYY [Q]Q\") %> Review\n\n**Date Range**: <% tp.date.now(\"YYYY-MM-DD\", 0, -tp.date.now().quarter + 1) %> - <% tp.date.now(\"YYYY-MM-DD\", 0, -tp.date.now().quarter + 1 + 90) %>\n\n---\n\n## üß† Intelligence Synthesis\n\n### Quarter Synthesis\n\n### The Witness\n*Quarterly Awareness and Observation*\n\n### The Logos Inquisitor\n*Quarterly Rational Analysis*\n\n### The Alpha Scanner\n*Quarterly Opportunities and Threats*\n\n### The Structural Integrator\n*Quarterly Systems Thinking*\n\n### The Ascension Architect\n*Quarterly Growth and Development*\n\n### The Mythopoetic Weaver\n*Quarterly Narrative and Meaning*\n\n### The Somatic Arbiter\n*Quarterly Body Wisdom*\n\n### The State-Hacker\n*Quarterly Consciousness States*\n\n### The Capital Strategist\n*Quarterly Financial Intelligence*\n\n### The Hearth Tender\n*Quarterly Home and Family Dynamics*\n\n### The Network Weaver\n*Quarterly Relationship Intelligence*\n\n### The Stillness Warden\n*Quarterly Peace and Rest*\n\n### The Aesthetic Calibrator\n*Quarterly Beauty and Design*\n\n### The Legacy Tender\n*Quarterly Long-term Impact*\n\n### The Systemic Navigator\n*Quarterly Operational Intelligence*\n\n---\n\n## üéØ Meta-Synthesis\n\n### Quarter Oracle Synthesis\n*Quarterly Wisdom Perspective*\n\n### Quarter Phoenix Synthesis\n*Quarterly Transformation Perspective*\n\n### Quarter Sovereign Synthesis\n*Quarterly Power and Agency*\n\n---\n\n## üìä Quarterly Metrics\n\n### Monthly Summaries\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Month\", value: row => row.$link },\n  { id: \"Synthesized\", value: row => row.value(\"month_synthesis\") ? \"‚úÖ\" : \"‚è≥\" }\n];\n\nreturn function View() {\n  const months = dc.useQuery(`@page and \"08-Months\" and quarters = \"<% tp.file.title %>\"`);\n  const sortedMonths = dc.useArray(months, array => \n    array.sort(row => row.$name)\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedMonths} />;\n}\n```\n\n### Goal Progress\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Quarterly Goal\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"status\") },\n  { id: \"Progress\", value: row => row.value(\"goal_progress\") }\n];\n\nreturn function View() {\n  const goals = dc.useQuery(`@page and \"14-Quarterly-Goals\" and quarters = \"<% tp.file.title %>\"`);\n  const sortedGoals = dc.useArray(goals, array => \n    array.sort(row => row.value(\"goal_progress\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedGoals} />;\n}\n```\n\n### Task Completion\n```datacorejsx\nreturn function View() {\n  const tasks = dc.useQuery(`@page and \"16-Tasks\" and quarters = \"<% tp.file.title %>\"`);\n  \n  const total = tasks.length;\n  const completed = tasks.filter(task => task.value(\"completed\")).length;\n  const percentage = total > 0 ? Math.round((completed / total) * 100) : 0;\n  \n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Total</th>\n          <th>Completed</th>\n          <th>%</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{total}</td>\n          <td>{completed}</td>\n          <td>{percentage}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n```\n\n### Financial Summary\n```datacorejsx\nreturn function View() {\n  const financialLogs = dc.useQuery(`@page and \"Financial Log\" and quarters = \"<% tp.file.title %>\"`);\n  \n  const income = financialLogs.reduce((sum, log) => sum + (log.value(\"Total_Income\") || 0), 0);\n  const expenses = financialLogs.reduce((sum, log) => sum + (log.value(\"Total_Expenses\") || 0), 0);\n  const net = financialLogs.reduce((sum, log) => sum + (log.value(\"Net_Cashflow\") || 0), 0);\n  \n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Income</th>\n          <th>Expenses</th>\n          <th>Net</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{income}</td>\n          <td>{expenses}</td>\n          <td>{net}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n```\n\n### Systemic Issues\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Issue\", value: row => row.$link },\n  { id: \"Impact\", value: row => row.value(\"impact\") },\n  { id: \"Status\", value: row => row.value(\"status\") }\n];\n\nreturn function View() {\n  const issues = dc.useQuery(`@page and \"03-Systemic-Journal\" and date >= \"<% tp.frontmatter.time_period_start %>\" and date <= \"<% tp.frontmatter.time_period_end %>\"`);\n  const sortedIssues = dc.useArray(issues, array => \n    array.sort(row => row.value(\"impact\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedIssues} />;\n}\n```\n\n---\n\n## üé≠ Quarterly Reflection\n\n### Key Learnings\n\n**What did I learn this quarter?**\n\n### Wins\n\n**What went well?**\n\n### Challenges\n\n**What were the obstacles?**\n\n### Pattern Recognition\n\n**What patterns do I notice?**\n\n### Next Quarter Focus\n\n**What needs attention next quarter?**\n\n---\n\n## üöÄ Next Quarter Planning\n\n**Primary Focus Areas**\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*",
      "frontmatter": {
        "title": "<% tp.date.now(\"YYYY-[Q]Q\") %> Review",
        "quarter_number": "<% tp.date.now(\"[Q]Q\") %>",
        "year": "<% tp.date.now(\"YYYY\") %>",
        "time_period_start": "<% tp.date.now(\"YYYY-MM-DD\", 0, -tp.date.now().quarter + 1) %>",
        "time_period_end": "<% tp.date.now(\"YYYY-MM-DD\", 0, -tp.date.now().quarter + 1 + 90) %>",
        "containing_period": "[[<% tp.date.now(\\\"YYYY\\\") %>]]",
        "contained_periods": "[] # Auto-populated with months",
        "parallel_periods": "[] # Other quarters in same year",
        "hierarchy_level": "review",
        "parent_entities": "[] # Years",
        "child_entities": "[] # Months",
        "sibling_entities": "[] # Other quarters in year",
        "related_time_periods": "[]",
        "strategic_alignment": "[]",
        "years": "[[<% tp.date.now(\\\"YYYY\\\") %>]]",
        "months": "[]",
        "weeks": "[]",
        "days": "[]",
        "type": "quarterly-review",
        "status": "Active",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "relational-journal.md",
      "relative_path": "relational-journal.md",
      "absolute_path": ".\\relational-journal.md",
      "size_bytes": 806,
      "modified_timestamp": 1760531052.1271875,
      "created_timestamp": 1760393928.0727093,
      "content": "# Relational Journal - <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>\n\n## üë• Interaction Details\n\n**People Involved**: \n**Emotional Tone**: \n**Power Balance**: \n\n## üìù Interaction Summary\n\n## üß† Analysis\n\n**What was the underlying dynamic?**\n\n**How did I contribute to this interaction?**\n\n**What patterns emerge in this relationship?**\n\n**What needs to be addressed?**\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "Relational Journal",
        "rj_date": "<% tp.date.now(\"YYYY-MM-DD\") %>T<% tp.date.now(\"HH:mm\") %>",
        "rj_people": "[]",
        "rj_emotional_tone": "",
        "rj_power_balance": "",
        "rj_days": "[[<% tp.date.now(\\\"YYYY-MM-DD\\\") %>]]",
        "rj_relationship_status": "",
        "rj_total_context": "",
        "rj_id": "",
        "entity_hierarchy_level": "atomic",
        "entity_type": "relational-journal",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "stories.md",
      "relative_path": "stories.md",
      "absolute_path": ".\\stories.md",
      "size_bytes": 6029,
      "modified_timestamp": 1760532068.1415174,
      "created_timestamp": 1760453078.4798853,
      "content": "# Story Overview\n\n## Story Title\n\n## Story Type\n\n## Story Genre\n\n## Story Theme\n\n## Story Purpose\n\n## Story Audience\n\n# Story Structure\n\n## Story Arc\n\n## Narrative Structure\n\n## Plot Type\n\n## Story Timeline\n\n## Story Setting\n\n## Time Period\n\n## Location\n\n## Cultural Context\n\n# Story Characters\n\n## Main Characters\n\n## Supporting Characters\n\n## Antagonists\n\n## Character Relationships\n\n## Character Development\n\n## Character Arcs\n\n## Character Motivations\n\n## Character Backstories\n\n# Story Plot\n\n## Plot Summary\n\n## Main Conflict\n\n## Subplots\n\n## Plot Twists\n\n## Climax\n\n## Resolution\n\n## Open Questions\n\n## Thematic Elements\n\n# Story Writing\n\n## Writing Style\n\n## Narrative Voice\n\n## Perspective\n\n## Language Level\n\n## Dialogue Style\n\n## Description Style\n\n## Pacing\n\n## Tension Building\n\n# Story Development\n\n## Draft Status\n\n## Revision History\n\n## Writing Progress\n\n## Completion Milestones\n\n## Research Needed\n\n## Inspiration Sources\n\n## Creative Constraints\n\n## Development Challenges\n\n# Story Quality\n\n## Narrative Coherence\n\n## Character Consistency\n\n## Plot Plausibility\n\n## Emotional Impact\n\n## Originality\n\n## Readability\n\n## Engagement Level\n\n## Overall Rating\n\n# Story Relationships\n\n## Prequel Stories\n\n## Sequel Stories\n\n## Related Stories\n\n## Shared Universe\n\n## Character Crossovers\n\n## Thematic Connections\n\n## Setting Connections\n\n## Story Series\n\n# Story Analytics\n\n## Reader Engagement\n\n## Feedback Scores\n\n## Sharing Frequency\n\n## Recommendation Rate\n\n## Time to Read\n\n## Completion Rate\n\n## Re-read Value\n\n## Emotional Response\n\n# Story Management\n\n## Publication Status\n\n## Distribution Channels\n\n## Access Permissions\n\n## Sharing Restrictions\n\n## Archival Status\n\n## Version Control\n\n## Backup Status\n\n## Sync Status\n\n# Story Collaboration\n\n## Collaborators\n\n## Editors\n\n## Beta Readers\n\n## Feedback Providers\n\n## Co-authors\n\n## Illustrators\n\n## Cover Artists\n\n## Publishing Partners\n\n# Story Publication\n\n## Publishing Status\n\n## Publishing Platform\n\n## Distribution Method\n\n## Publication Date\n\n## ISBN Identifier\n\n## Copyright Info\n\n## Licensing Terms\n\n## Royalty Structure\n\n# Story Marketing\n\n## Marketing Strategy\n\n## Target Demographics\n\n## Promotion Channels\n\n## Branding Elements\n\n## Tagline\n\n## Cover Description\n\n## Author Bio\n\n## Press Kit\n\n# Story Reviews\n\n## Critical Reception\n\n## User Reviews\n\n## Award Nominations\n\n## Sales Performance\n\n## Review Analysis\n\n## Feedback Trends\n\n## Improvement Areas\n\n## Success Factors\n\n# Story Documentation\n\n## Writing Process\n\n## Creation Timeline\n\n## Inspiration Journal\n\n## Technical Notes\n\n## Research Notes\n\n## Character Bibles\n\n## Setting Descriptions\n\n## Plot Outlines\n\n# Story Future\n\n## Sequel Plans\n\n## Expansion Ideas\n\n## Adaptation Potential\n\n## Merchandising Opportunities\n\n## Franchise Development\n\n## Cross-media Potential\n\n## Community Building\n\n## Long-term Vision\n\n# Notes\n\n## Writer Notes\n\n## Inspiration Notes\n\n## Revision Notes\n\n## Future Ideas\n\n# Related Items\n\n## Related Projects\n\n## Inspiration Sources\n\n## Writing Resources\n\n## Publishing Contacts\n",
      "frontmatter": {
        "story_id": "",
        "story_title": "",
        "story_type": "",
        "created_date": "2025-10-14",
        "last_updated": "2025-10-14",
        "status": "pending",
        "priority": "medium",
        "category": "Stories",
        "tags": "[stories, template, pending]",
        "story_genre": "",
        "story_theme": "",
        "story_tone": "",
        "story_purpose": "",
        "story_audience": "",
        "story_length": "",
        "story_complexity": "",
        "story_maturity": "",
        "story_arc": "",
        "narrative_structure": "",
        "plot_type": "",
        "story_timeline": "",
        "story_setting": "",
        "time_period": "",
        "location": "",
        "cultural_context": "",
        "main_characters": "[]",
        "supporting_characters": "[]",
        "antagonists": "[]",
        "character_relationships": "[]",
        "character_development": "",
        "character_arcs": "[]",
        "character_motivations": "[]",
        "character_backstories": "[]",
        "plot_summary": "",
        "main_conflict": "",
        "subplots": "[]",
        "plot_twists": "[]",
        "climax": "",
        "resolution": "",
        "open_questions": "[]",
        "thematic_elements": "[]",
        "writing_style": "",
        "narrative_voice": "",
        "perspective": "",
        "language_level": "",
        "dialogue_style": "",
        "description_style": "",
        "pacing": "",
        "tension_building": "",
        "draft_status": "",
        "revision_history": "[]",
        "writing_progress": 0,
        "completion_milestones": "[]",
        "research_needed": "[]",
        "inspiration_sources": "[]",
        "creative_constraints": "[]",
        "development_challenges": "[]",
        "narrative_coherence": "",
        "character_consistency": "",
        "plot_plausibility": "",
        "emotional_impact": "",
        "originality": "",
        "readability": "",
        "engagement_level": "",
        "overall_rating": "",
        "prequel_stories": "[]",
        "sequel_stories": "[]",
        "related_stories": "[]",
        "shared_universe": "",
        "character_crossovers": "[]",
        "thematic_connections": "[]",
        "setting_connections": "[]",
        "story_series": "",
        "reader_engagement": "",
        "feedback_scores": "[]",
        "sharing_frequency": 0,
        "recommendation_rate": 0,
        "time_to_read": "",
        "completion_rate": 0,
        "re_read_value": "",
        "emotional_response": "[]",
        "publication_status": "",
        "distribution_channels": "[]",
        "access_permissions": "",
        "sharing_restrictions": "",
        "archival_status": "",
        "version_control": "",
        "backup_status": "",
        "sync_status": "",
        "collaborators": "[]",
        "editors": "[]",
        "beta_readers": "[]",
        "feedback_providers": "[]",
        "co_authors": "[]",
        "illustrators": "[]",
        "cover_artists": "[]",
        "publishing_partners": "[]",
        "publishing_platform": "",
        "distribution_method": "",
        "publication_date": "",
        "isbn_identifier": "",
        "copyright_info": "",
        "licensing_terms": "",
        "royalty_structure": "",
        "marketing_strategy": "",
        "target_demographics": "[]",
        "promotion_channels": "[]",
        "branding_elements": "[]",
        "tagline": "",
        "cover_description": "",
        "author_bio": "",
        "press_kit": "",
        "critical_reception": "",
        "user_reviews": "[]",
        "award_nominations": "[]",
        "sales_performance": "",
        "review_analysis": "",
        "feedback_trends": "[]",
        "improvement_areas": "[]",
        "success_factors": "[]",
        "writing_process": "",
        "creation_timeline": "",
        "inspiration_journal": "",
        "technical_notes": "",
        "research_notes": "",
        "character_bibles": "[]",
        "setting_descriptions": "[]",
        "plot_outlines": "[]",
        "sequel_plans": "[]",
        "expansion_ideas": "[]",
        "adaptation_potential": "",
        "merchandising_opportunities": "[]",
        "franchise_development": "",
        "cross_media_potential": "",
        "community_building": "",
        "long_term_vision": "",
        "writer_notes": "",
        "inspiration_notes": "",
        "revision_notes": "",
        "future_ideas": "[]",
        "related_projects": "[]",
        "writing_resources": "[]",
        "publishing_contacts": "[]",
        "entity_type": "story",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "subjective-journal.md",
      "relative_path": "subjective-journal.md",
      "absolute_path": ".\\subjective-journal.md",
      "size_bytes": 675,
      "modified_timestamp": 1760531052.1231856,
      "created_timestamp": 1760393910.907906,
      "content": "# Subjective Journal - <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>\n\n## üé≠ Emotional State\n\n**Primary Emotion**: \n**Secondary Emotion**: \n\n## üí≠ Content\n\n## üß† Reflection\n\n**What triggered this emotional state?**\n\n**What patterns do I notice?**\n\n**What needs attention?**\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "Subjective Journal",
        "sj_date": "<% tp.date.now(\"YYYY-MM-DD\") %>T<% tp.date.now(\"HH:mm\") %>",
        "sj_primary_emotion": "",
        "sj_secondary_emotion": "",
        "sj_days": "[[<% tp.date.now(\\\"YYYY-MM-DD\\\") %>]]",
        "sj_total_context": "",
        "sj_id": "",
        "entity_hierarchy_level": "atomic",
        "entity_type": "subjective-journal",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "systemic-journal.md",
      "relative_path": "systemic-journal.md",
      "absolute_path": ".\\systemic-journal.md",
      "size_bytes": 947,
      "modified_timestamp": 1760530520.6701193,
      "created_timestamp": 1760393947.3959496,
      "content": "# Systemic Journal - <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>\n\n## ‚ö° Issue Details\n\n**Impact Level**: \n**System Domain**: \n**Current Status**: Triage\n\n## üìã Issue Description\n\n## ü§ñ AI Analysis\n\n*This section will be populated by AI analysis once integrated*\n\n## üéØ Resolution Plan\n\n**Immediate Actions**: \n\n**Long-term Strategy**: \n\n## üìä Related Items\n\n**Tasks Created**: \n**Failure Scenarios**: \n**Projects Affected**: \n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "Systemic Journal",
        "sysj_date": "<% tp.date.now(\"YYYY-MM-DD\") %>T<% tp.date.now(\"HH:mm\") %>",
        "sysj_status": "Triage",
        "sysj_impact": "",
        "sysj_system_domain": "",
        "sysj_tasks": "[]",
        "sysj_failure_scenarios": "[]",
        "sysj_projects": "[]",
        "sysj_ai_generated_report": "",
        "sysj_systemic_report": "",
        "sysj_created_time": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>",
        "sysj_id": "",
        "entity_hierarchy_level": "atomic",
        "entity_type": "systemic-journal",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "task-template.md",
      "relative_path": "task-template.md",
      "absolute_path": ".\\task-template.md",
      "size_bytes": 3537,
      "modified_timestamp": 1760532083.742917,
      "created_timestamp": 1760486815.720446,
      "content": "# <% tp.file.title %>\n\n## üìã Task Overview\n\n**Priority**: <% tp.frontmatter.task_priority %>\n**Status**: <% tp.frontmatter.task_status %>\n**Estimated Hours**:\n**Actual Hours**: \n\n### Task Summary\n\n## üéØ Strategic Alignment\n\n**Projects**: \n**Quarterly Goals**: \n**Annual Goals**: \n\n## üìä Completion Framework\n\n### Completion Criteria\n\n### External Dependencies\n\n## üöÄ Execution Plan\n\n### Steps\n- [ ] \n- [ ] \n- [ ] \n\n### Subtasks\n- [ ] \n- [ ] \n- [ ] \n\n## üìà Progress Tracking\n\n**Current Status**: <% tp.frontmatter.task_status %>\n**Time Invested**: 0 hours\n**Next Action**: \n\n## üîó Related Items\n\n### Related Tasks\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Task\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"task_status\") },\n  { id: \"Priority\", value: row => row.value(\"task_priority\") }\n];\n\nreturn function View() {\n  const currentFile = \"{{TITLE}}\"; // Placeholder for tp.file.title\n  const tasks = dc.useQuery(`@page and \"16-Tasks\" and file != \"${currentFile}\"`);\n  const relatedTasks = tasks.filter(task => {\n    const taskProjects = task.value(\"projects\") || [];\n    const taskQuarterlyGoals = task.value(\"quarterly_goals\") || [];\n    const taskAnnualGoals = task.value(\"annual_goals\") || [];\n    // Using empty arrays to prevent errors when opened as templates\n    const thisProjects = [];\n    const thisQuarterlyGoals = [];\n    const thisAnnualGoals = [];\n\n    return (\n      taskProjects.some(p => thisProjects.includes(p)) ||\n      taskQuarterlyGoals.some(qg => thisQuarterlyGoals.includes(qg)) ||\n      taskAnnualGoals.some(ag => thisAnnualGoals.includes(ag))\n    );\n  });\n\n  const sortedTasks = dc.useArray(relatedTasks, array =>\n    array.sort(row => row.value(\"task_priority\"))\n  );\n\n  return <dc.VanillaTable columns={COLUMNS} rows={sortedTasks} />;\n}\n```\n\n### Systemic Issues\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Issue\", value: row => row.$link },\n  { id: \"Impact\", value: row => row.value(\"impact\") },\n  { id: \"Status\", value: row => row.value(\"status\") }\n];\n\nreturn function View() {\n  const issues = dc.useQuery(`@page and \"03-Systemic-Journal\" and projects = \"{{TITLE}}\"`); // Placeholder for tp.file.title\n  const sortedIssues = dc.useArray(issues, array => \n    array.sort(row => row.value(\"impact\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedIssues} />;\n}\n```\n\n## üìù Notes & Context\n\n### Context\n\n### Energy Requirements\n\n### Cognitive Load\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "",
        "description": "",
        "task_status": "Waiting",
        "task_priority": "‚≠ê‚≠ê‚≠ê",
        "action_date": "<% tp.date.now('YYYY-MM-DD') %>T09:00",
        "assignee": "",
        "projects": "[]",
        "weeks": "[]",
        "systemic_journal": "[]",
        "last_edited_time": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>",
        "project_status": "",
        "sprint_status": "",
        "monitor": "",
        "tasks_report": "",
        "done_button": false,
        "current_sprint_button": false,
        "backlog_button": false,
        "next_sprint_1_button": false,
        "next_sprint_2_button": false,
        "next_sprint_3_button": false,
        "next_sprint_4_button": false,
        "hierarchy_level": "strategic",
        "parent_entities": "[]",
        "child_entities": "[]",
        "sibling_entities": "[]",
        "related_time_periods": "[]",
        "strategic_alignment": "[]",
        "quarterly_goals": "[]",
        "annual_goals": "[]",
        "quarters": "[]",
        "years": "[]",
        "days": "[]",
        "external_dependencies": "[]",
        "completion_criteria": "[]",
        "task_type": "",
        "task_energy_required": "",
        "task_cognitive_load": "",
        "progress": 0,
        "health": "",
        "next_milestone": "",
        "blockers": "[]",
        "energy_required": "",
        "time_of_day": "",
        "task_location": "",
        "tools_needed": "[]",
        "entity_hierarchy_level": "strategic",
        "entity_type": "task",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "values.md",
      "relative_path": "values.md",
      "absolute_path": ".\\values.md",
      "size_bytes": 1058,
      "modified_timestamp": 1760532101.2393425,
      "created_timestamp": 1760394205.7820659,
      "content": "# <% tp.file.title %>\n\n## üèõÔ∏è Core Tenet\n\n*The fundamental truth or principle*\n\n## ü§ù The Commitment\n\n*What you commit to doing/being*\n\n## üö´ The Boundary\n\n*What you absolutely will not do*\n\n## üåë Shadow Expression\n\n*The pathological form when this value is violated*\n\n## ‚öñÔ∏è Litmus Test\n\n*How to know you're living in alignment with this value*\n\n## üîó Strategic Connections\n\n**Life Aspects**: \n**Vision Connection**: \n**Annual Goals**: \n\n## üìà Alignment Tracking\n\n### Recent Examples of Alignment\n\n### Recent Examples of Misalignment\n\n### Growth Opportunities\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "core_tenet": "",
        "the_commitment": "",
        "the_boundary": "",
        "shadow_expression": "",
        "litmus_test": "",
        "status": "Active",
        "hierarchy_level": "strategic",
        "parent_entities": "[]",
        "child_entities": "[]",
        "sibling_entities": "[]",
        "related_time_periods": "[]",
        "strategic_alignment": "[]",
        "life_aspects": "[]",
        "vision": "[]",
        "annual_goals": "[]",
        "progress": 0,
        "health": "",
        "next_milestone": "",
        "blockers": "[]",
        "entity_type": "values",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "vision.md",
      "relative_path": "vision.md",
      "absolute_path": ".\\vision.md",
      "size_bytes": 2203,
      "modified_timestamp": 1760532117.211145,
      "created_timestamp": 1760476548.5234144,
      "content": "# <% tp.file.title %>\n\n## üëÅÔ∏è Vision Statement\n\n## üéØ Guiding Question\n\n## üèõÔ∏è Strategic Pillars\n\n## üìä Priority & Status\n\n**Priority**: \n**Status**: \n\n**Next Review**: \n**Last Reviewed**: \n\n## üîó Strategic Alignment\n\n**Life Aspects**: \n**Core Values**: \n\n## üìà Manifestation\n\n### Annual Goals\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Annual Goal\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"status\") },\n  { id: \"Progress\", value: row => row.value(\"goal_progress\") }\n];\n\nreturn function View() {\n  const goals = dc.useQuery(`@page and \"13-Annual-Goals\" and vision = \"{{TITLE}}\"`); // Placeholder for tp.file.title\n  const sortedGoals = dc.useArray(goals, array => \n    array.sort(row => row.value(\"goal_progress\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedGoals} />;\n}\n```\n\n### Quarterly Progress\n\n```datacorejsx\nreturn function View() {\n  const quarterlyGoals = dc.useQuery(`@page and \"14-Quarterly-Goals\" and vision = \"{{TITLE}}\"`); // Placeholder for tp.file.title\n  \n  const total = quarterlyGoals.length;\n  const completed = quarterlyGoals.filter(goal => goal.value(\"status\") === \"Done\").length;\n  const percentage = total > 0 ? Math.round((completed / total) * 100) : 0;\n  \n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Q-Goals</th>\n          <th>Completed</th>\n          <th>%</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{total}</td>\n          <td>{completed}</td>\n          <td>{percentage}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n```\n\n## üßº Vision Review\n\n### What's Working\n\n### What Needs Adjustment\n\n### Emerging Insights\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "vision_statement": "",
        "guiding_question": "",
        "strategic_pillars": "[]",
        "priority": "‚≠ê‚≠ê‚≠ê",
        "status": "Planning",
        "review_date": "",
        "last_review_date": "",
        "hierarchy_level": "strategic",
        "parent_entities": "[]",
        "child_entities": "[]",
        "sibling_entities": "[]",
        "related_time_periods": "[]",
        "strategic_alignment": "[]",
        "life_aspects": "[]",
        "values": "[]",
        "annual_goals": "[]",
        "quarterly_goals": "[]",
        "progress": 0,
        "health": "",
        "next_milestone": "",
        "blockers": "[]",
        "entity_type": "vision",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "weekly-review.md",
      "relative_path": "weekly-review.md",
      "absolute_path": ".\\weekly-review.md",
      "size_bytes": 5503,
      "modified_timestamp": 1760532130.7474096,
      "created_timestamp": 1760399346.131445,
      "content": "# Week <% tp.date.now(\"YYYY-[W]WW\") %> Review\n\n**Date Range**: <% tp.date.now(\"YYYY-MM-DD\", 0, -tp.date.now().weekday) %> - <% tp.date.now(\"YYYY-MM-DD\", 6, -tp.date.now().weekday) %>\n\n---\n\n## üß† Intelligence Synthesis\n\n### Week Synthesis\n\n### The Witness\n*Weekly Awareness and Observation*\n\n### The Logos Inquisitor\n*Weekly Rational Analysis*\n\n### The Alpha Scanner\n*Weekly Opportunities and Threats*\n\n### The Structural Integrator\n*Weekly Systems Thinking*\n\n### The Ascension Architect\n*Weekly Growth and Development*\n\n### The Mythopoetic Weaver\n*Weekly Narrative and Meaning*\n\n### The Somatic Arbiter\n*Weekly Body Wisdom*\n\n### The State-Hacker\n*Weekly Consciousness States*\n\n### The Capital Strategist\n*Weekly Financial Intelligence*\n\n### The Hearth Tender\n*Weekly Home and Family Dynamics*\n\n### The Network Weaver\n*Weekly Relationship Intelligence*\n\n### The Stillness Warden\n*Weekly Peace and Rest*\n\n### The Aesthetic Calibrator\n*Weekly Beauty and Design*\n\n### The Legacy Tender\n*Weekly Long-term Impact*\n\n### The Systemic Navigator\n*Weekly Operational Intelligence*\n\n---\n\n## üéØ Meta-Synthesis\n\n### Week Oracle Synthesis\n*Weekly Wisdom Perspective*\n\n### Week Phoenix Synthesis\n*Weekly Transformation Perspective*\n\n### Week Sovereign Synthesis\n*Weekly Power and Agency*\n\n---\n\n## üìä Weekly Metrics\n\n### Daily Summaries\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Day\", value: row => row.$link },\n  { id: \"Synthesized\", value: row => row.value(\"day_synthesis\") ? \"‚úÖ\" : \"‚è≥\" },\n  { id: \"Reflected\", value: row => row.value(\"night_wind_down\") ? \"‚úÖ\" : \"‚è≥\" }\n];\n\nreturn function View() {\n  const days = dc.useQuery(`@page and \"06-Days\" and weeks = \"<% tp.file.title %>\"`);\n  const sortedDays = dc.useArray(days, array => \n    array.sort(row => row.value(\"date\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedDays} />;\n}\n```\n\n### Task Completion\n\n```datacorejsx\nreturn function View() {\n  const tasks = dc.useQuery(`@page and \"16-Tasks\" and weeks = \"<% tp.file.title %>\"`);\n  \n  const total = tasks.length;\n  const completed = tasks.filter(task => task.value(\"completed\")).length;\n  const percentage = total > 0 ? Math.round((completed / total) * 100) : 0;\n  \n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Total</th>\n          <th>Completed</th>\n          <th>%</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{total}</td>\n          <td>{completed}</td>\n          <td>{percentage}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n```\n\n### Financial Summary\n\n```datacorejsx\nreturn function View() {\n  const financialLogs = dc.useQuery(`@page and \"Financial Log\" and weeks = \"<% tp.file.title %>\"`);\n  \n  const income = financialLogs.reduce((sum, log) => sum + (log.value(\"Total_Income\") || 0), 0);\n  const expenses = financialLogs.reduce((sum, log) => sum + (log.value(\"Total_Expenses\") || 0), 0);\n  const net = financialLogs.reduce((sum, log) => sum + (log.value(\"Net_Cashflow\") || 0), 0);\n  \n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Income</th>\n          <th>Expenses</th>\n          <th>Net</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{income}</td>\n          <td>{expenses}</td>\n          <td>{net}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n```\n\n### Systemic Issues\n\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Issue\", value: row => row.$link },\n  { id: \"Impact\", value: row => row.value(\"impact\") },\n  { id: \"Status\", value: row => row.value(\"status\") }\n];\n\nreturn function View() {\n  const issues = dc.useQuery(`@page and \"Logs/Systemic\" and date >= \"<% tp.frontmatter.time_period_start %>\" and date <= \"<% tp.frontmatter.time_period_end %>\"`);\n  const sortedIssues = dc.useArray(issues, array => \n    array.sort(row => row.value(\"impact\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedIssues} />;\n}\n```\n\n---\n\n## üé≠ Weekly Reflection\n\n### Key Learnings\n\n**What did I learn this week?**\n\n### Wins\n\n**What went well?**\n\n### Challenges\n\n**What were the obstacles?**\n\n### Pattern Recognition\n\n**What patterns do I notice?**\n\n### Next Week Focus\n\n**What needs attention next week?**\n\n---\n\n## üöÄ Next Week Planning\n\n**Primary Focus Areas**",
      "frontmatter": {
        "title": "<% tp.date.now('YYYY-[W]WW') %>",
        "weekly_week_number": "<% tp.date.now(\"WW\") %>",
        "weekly_year": "<% tp.date.now(\"YYYY\") %>",
        "weekly_time_period_start": "<% tp.date.now('YYYY-MM-DD', -tp.date.now().weekday()) %>",
        "weekly_time_period_end": "<% tp.date.now('YYYY-MM-DD', 6 - tp.date.now().weekday()) %>",
        "weekly_containing_period": "[[<% tp.date.now('YYYY-[Q]Q') %>]]",
        "entity_hierarchy_level": "review",
        "entity_type": "weekly-review",
        "weekly_months": "[\"[[<% tp.date.now('YYYY-MM') %>]]\"]",
        "weekly_quarters": "[\"[[<% tp.date.now('YYYY-[Q]Q') %>]]\"]",
        "weekly_years": "[\"[[<% tp.date.now('YYYY') %>]]\"]",
        "weekly_days": "[]",
        "weekly_status": "Active",
        "weekly_week_synthesis": "",
        "weekly_the_witness": "",
        "weekly_the_logos_inquisitor": "",
        "weekly_the_alpha_scanner": "",
        "weekly_the_structural_integrator": "",
        "weekly_the_ascension_architect": "",
        "weekly_the_mythopoetic_weaver": "",
        "weekly_the_somatic_arbiter": "",
        "weekly_the_state_hacker": "",
        "weekly_the_capital_strategist": "",
        "weekly_the_hearth_tender": "",
        "weekly_the_network_weaver": "",
        "weekly_the_stillness_warden": "",
        "weekly_the_aesthetic_calibrator": "",
        "weekly_the_legacy_tender": "",
        "weekly_the_systemic_navigator": "",
        "weekly_week_oracle_synthesis": "",
        "weekly_week_phoenix_synthesis": "",
        "weekly_week_sovereign_synthesis": "",
        "weekly_key_learnings": "",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    },
    {
      "filename": "yearly-review.md",
      "relative_path": "yearly-review.md",
      "absolute_path": ".\\yearly-review.md",
      "size_bytes": 5182,
      "modified_timestamp": 1760532792.9786093,
      "created_timestamp": 1760399825.3234212,
      "content": "# <% tp.date.now(\"YYYY\") %> Year Review\n\n**Date Range**: <% tp.date.now(\"YYYY-01-01\") %> - <% tp.date.now(\"YYYY-12-31\") %>\n\n---\n\n## üß† Intelligence Synthesis\n\n### Year Synthesis\n\n### The Witness\n*Yearly Awareness and Observation*\n\n### The Logos Inquisitor\n*Yearly Rational Analysis*\n\n### The Alpha Scanner\n*Yearly Opportunities and Threats*\n\n### The Structural Integrator\n*Yearly Systems Thinking*\n\n### The Ascension Architect\n*Yearly Growth and Development*\n\n### The Mythopoetic Weaver\n*Yearly Narrative and Meaning*\n\n### The Somatic Arbiter\n*Yearly Body Wisdom*\n\n### The State-Hacker\n*Yearly Consciousness States*\n\n### The Capital Strategist\n*Yearly Financial Intelligence*\n\n### The Hearth Tender\n*Yearly Home and Family Dynamics*\n\n### The Network Weaver\n*Yearly Relationship Intelligence*\n\n### The Stillness Warden\n*Yearly Peace and Rest*\n\n### The Aesthetic Calibrator\n*Yearly Beauty and Design*\n\n### The Legacy Tender\n*Yearly Long-term Impact*\n\n### The Systemic Navigator\n*Yearly Operational Intelligence*\n\n---\n\n## üéØ Meta-Synthesis\n\n### Year Oracle Synthesis\n*Yearly Wisdom Perspective*\n\n### Year Phoenix Synthesis\n*Yearly Transformation Perspective*\n\n### Year Sovereign Synthesis\n*Yearly Power and Agency*\n\n---\n\n## üìä Yearly Metrics\n\n### Quarterly Summaries\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Quarter\", value: row => row.$link },\n  { id: \"Synthesized\", value: row => row.value(\"quarter_synthesis\") ? \"‚úÖ\" : \"‚è≥\" }\n];\n\nreturn function View() {\n  const quarters = dc.useQuery(`@page and \"09-Quarters\" and years = \"<% tp.file.title %>\"`);\n  const sortedQuarters = dc.useArray(quarters, array => \n    array.sort(row => row.$name)\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedQuarters} />;\n}\n```\n\n### Annual Goal Progress\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Annual Goal\", value: row => row.$link },\n  { id: \"Status\", value: row => row.value(\"status\") },\n  { id: \"Progress\", value: row => row.value(\"goal_progress\") }\n];\n\nreturn function View() {\n  const goals = dc.useQuery(`@page and \"13-Annual-Goals\" and years = \"<% tp.file.title %>\"`);\n  const sortedGoals = dc.useArray(goals, array => \n    array.sort(row => row.value(\"goal_progress\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedGoals} />;\n}\n```\n\n### Task Completion\n```datacorejsx\nreturn function View() {\n  const tasks = dc.useQuery(`@page and \"16-Tasks\" and years = \"<% tp.file.title %>\"`);\n  \n  const total = tasks.length;\n  const completed = tasks.filter(task => task.value(\"completed\")).length;\n  const percentage = total > 0 ? Math.round((completed / total) * 100) : 0;\n  \n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Total</th>\n          <th>Completed</th>\n          <th>%</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{total}</td>\n          <td>{completed}</td>\n          <td>{percentage}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n```\n\n### Financial Summary\n```datacorejsx\nreturn function View() {\n  const financialLogs = dc.useQuery(`@page and \"Financial Log\" and years = \"<% tp.file.title %>\"`);\n  \n  const income = financialLogs.reduce((sum, log) => sum + (log.value(\"Total_Income\") || 0), 0);\n  const expenses = financialLogs.reduce((sum, log) => sum + (log.value(\"Total_Expenses\") || 0), 0);\n  const net = financialLogs.reduce((sum, log) => sum + (log.value(\"Net_Cashflow\") || 0), 0);\n  \n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Income</th>\n          <th>Expenses</th>\n          <th>Net</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{income}</td>\n          <td>{expenses}</td>\n          <td>{net}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n```\n\n### Systemic Issues\n```datacorejsx\nconst COLUMNS = [\n  { id: \"Issue\", value: row => row.$link },\n  { id: \"Impact\", value: row => row.value(\"impact\") },\n  { id: \"Status\", value: row => row.value(\"status\") }\n];\n\nreturn function View() {\n  const issues = dc.useQuery(`@page and \"03-Systemic-Journal\" and date >= \"<% tp.frontmatter.time_period_start %>\" and date <= \"<% tp.frontmatter.time_period_end %>\"`);\n  const sortedIssues = dc.useArray(issues, array => \n    array.sort(row => row.value(\"impact\"))\n  );\n  \n  return <dc.VanillaTable columns={COLUMNS} rows={sortedIssues} />;\n}\n```\n\n---\n\n## üé≠ Yearly Reflection\n\n### Key Learnings\n\n**What did I learn this year?**\n\n### Wins\n\n**What went well?**\n\n### Challenges\n\n**What were the obstacles?**\n\n### Pattern Recognition\n\n**What patterns do I notice?**\n\n### Next Year Focus\n\n**What needs attention next year?**\n\n---\n\n## üöÄ Next Year Planning\n\n**Primary Focus Areas**\n\n---\n\n*Created: <% tp.date.now(\"YYYY-MM-DD HH:mm\") %>*\n",
      "frontmatter": {
        "title": "<% tp.date.now(\"YYYY\") %> Year Review",
        "year": "<% tp.date.now(\"YYYY\") %>",
        "time_period_start": "<% tp.date.now(\"YYYY-01-01\") %>",
        "time_period_end": "<% tp.date.now(\"YYYY-12-31\") %>",
        "containing_period": "",
        "contained_periods": "[]",
        "parallel_periods": "[]",
        "hierarchy_level": "review",
        "parent_entities": "[]",
        "child_entities": "[]",
        "sibling_entities": "[]",
        "related_time_periods": "[]",
        "strategic_alignment": "[]",
        "quarters": "[]",
        "months": "[]",
        "weeks": "[]",
        "days": "[]",
        "type": "yearly-review",
        "status": "Active",
        "created": "<% tp.date.now(\"YYYY-MM-DDTHH:mm:ss\") %>"
      }
    }
  ]
}